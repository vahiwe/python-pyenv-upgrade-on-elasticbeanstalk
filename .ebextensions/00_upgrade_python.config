commands:
    01_install_python_with_upgraded_ssl:
      test: "[ ! -x /usr/bin/.pyenv/versions/3.8.5/bin/python3.8 ]"
      command: |
          echo $SHELL

          # 1. Install the following dependencies, which are necessary to build the versions of python via pyenv:
          sudo yum groupinstall -y "Development Tools"
          sudo yum install -y openssl11 openssl11-libs readline-devel \
              zlib-devel bzip2 bzip2-devel sqlite sqlite-devel \
              libffi-devel xz-devel openssl11-devel

          # 2. Install the openssl11-devel package:
          # sudo yum install -y openssl11-devel --allowerasing

          # If you run into a 'command not found' error for --allowerasing,
          # as an alternative you can use the 'yum swap' command to swap
          # the installed openssl-devel package for the openssl11-devel package:
          sudo yum swap openssl-devel openssl11-devel

          # 3. Install pyenv and then add the pyenv directory and binary to your shell envrionment:

          # Set the pyenv root to a readable location
          export PYENV_ROOT=/usr/bin/.pyenv

          curl -sL https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer -O
          sh pyenv-installer
          echo 'export PYENV_ROOT="/usr/bin/.pyenv"' | tee -a ~/.profile
          echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' | tee -a ~/.profile
          echo 'eval "$(pyenv init -)"' | tee -a ~/.profile
          echo 'eval "$(pyenv virtualenv-init -)"' | tee -a ~/.profile

          # 4. Install the desired version of python, for example 3.8.5:

          export PYENV_ROOT="/usr/bin/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          pyenv install 3.8.5

          # 5. Enable the new version as the global:

          pyenv global 3.8.5

          # 6. Verify the version of python is indeed the version we specified in the previous command:

          /usr/bin/.pyenv/versions/3.8.5/bin/python3.8 --version

          # 7. Check and confirm that the newly installed python was built against the openssl11 libraries:

          /usr/bin/.pyenv/versions/3.8.5/bin/python3.8 -c "import ssl; print(ssl.OPENSSL_VERSION)"

    02_update_eb_python_virtual_environment:
      test: source /var/app/venv/*/bin/activate && echo $(python -c "import ssl; print(ssl.OPENSSL_VERSION)") | grep 201
      command: |
          echo $SHELL

          # Inject the Python path envrionmen variable into the shell
          [[ -f /opt/elasticbeanstalk/deployment/env ]] && export $(grep 'PYTHONPATH' /opt/elasticbeanstalk/deployment/env | xargs)
          echo $PYTHONPATH

          # Remove text from the path
          export PYTHONPATH=$(echo $PYTHONPATH | sed 's~/bin~~g')
          echo $PYTHONPATH

          # if python path is empty, set it to the default path
          [[ -z $PYTHONPATH ]] && export PYTHONPATH=/var/app/venv/staging-LQM1lest
          echo $PYTHONPATH

          # remove the current python virtual environment
          rm -rf $PYTHONPATH

          # Create a new python virtual environment with the correct version of python
          /usr/bin/.pyenv/versions/3.8.5/bin/python3.8 -m venv $PYTHONPATH
